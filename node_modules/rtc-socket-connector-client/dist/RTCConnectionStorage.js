"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RTCConnectionStorage = void 0;
class RTCConnectionStorage {
    constructor() {
        this.connections = {};
    }
    set(socketId, rtcPeerConnection) {
        if (this.connections[socketId]) {
            throw new Error(`Socket is already exist in connection storage (socketId: ${socketId})`);
        }
        this.connections[socketId] = rtcPeerConnection;
    }
    get(socketId) {
        const connection = this.connections[socketId];
        if (!connection) {
            throw new Error(`Doesn't exist connection to get (socketId: ${socketId})`);
        }
        return connection;
    }
    remove(socketId) {
        if (!this.connections[socketId]) {
            throw new Error(`Doesn't exist connection to delete (socketId: ${socketId})`);
        }
        this.connections[socketId] = null;
    }
}
exports.RTCConnectionStorage = RTCConnectionStorage;
